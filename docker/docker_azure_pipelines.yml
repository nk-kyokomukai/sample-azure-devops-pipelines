# docker imageを作成する

# 変数定義
variables:
  folderName: 'docker'
  outputImageFileName: 'azure_pipelines_sample_image.tar' 
  imageName: 'pipelines-sample-image'
  tag: 'latest'
  createContainerScriptPath: 'docker/scripts/create_container.sh'

# mainブランチが更新されたときに起動
trigger:
- main

# ubuntu OSで実行
pool:
  vmImage: 'ubuntu-latest'

# steps内に実行する処理を記述する
steps:

# task「Docker@2」を用いてdocker imageの読み込み
- task: Docker@2
  displayName: 'Build an image'
  inputs:
    repository: '$(imageName)'
    command: 'build'
    Dockerfile: '$(folderName)/Dockerfile'
    tags: '$(tag)'

# docker imageをファイルとして保存
- script: |
    mkdir $(Build.ArtifactStagingDirectory)/$(folderName)
    cd $(Build.ArtifactStagingDirectory)/$(folderName)/
    docker save $(imageName) -o $(outputImageFileName)
    gzip $(outputImageFileName)
  displayName: 'Build Docker Image'

# task「CopyFiles@2」を用いて必要ファイルのコピーを行う
- task: CopyFiles@2
  inputs:
    contents: |
      $(folderName)/docker-compose.yml
      $(createContainerScriptPath)
    targetFolder: '$(Build.ArtifactStagingDirectory)/$(folderName)'
    flattenFolders: True
  displayName: 'Copy files'

# task「publishBuildArtifacts@1」を用いてビルド成果物をアップロードする
- task: publishBuildArtifacts@1
  displayName: 'Publish artifact'